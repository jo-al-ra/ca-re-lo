/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Representation of an asset in a supply chain.
 */
export type SmartDataModelsXXXdataModelXXXSchema = {
  /**
   * Property. Unique identifier of the entity
   */
  id?: string;
  /**
   * Property. Entity creation timestamp. This will usually be allocated by the storage platform.
   */
  dateCreated?: string;
  /**
   * Property. Timestamp of the last modification of the entity. This will usually be allocated by the storage platform.
   */
  dateModified?: string;
  /**
   * Property. A sequence of characters giving the original source of the entity data as a URL. Recommended to be the fully qualified domain name of the source provider, or the URL to the source object.
   */
  source?: string;
  /**
   * Property. The name of this item.
   */
  name?: string;
  /**
   * Property. An alternative name for this item
   */
  alternateName?: string;
  /**
   * Property. A description of this item
   */
  description?: string;
  /**
   * Property. A sequence of characters identifying the provider of the harmonised data entity.
   */
  dataProvider?: string;
  /**
   * Property. A List containing a JSON encoded sequence of characters referencing the unique Ids of the owner(s)
   */
  owner?: string[];
  /**
   * Property. list of uri pointing to additional resources about the item
   */
  seeAlso?: [string, ...string[]] | string;
  [k: string]: unknown;
} & {
  /**
   * Geoproperty. Geojson reference to the item. It can be Point, LineString, Polygon, MultiPoint, MultiLineString or MultiPolygon
   */
  location?:
  | GeoJSONPoint
  | GeoJSONLineString
  | GeoJSONPolygon
  | GeoJSONMultiPoint
  | GeoJSONMultiLineString
  | GeoJSONMultiPolygon;
  /**
   * Property. The mailing address. Model:'https://schema.org/address'
   */
  address?: {
    /**
     * Property. The street address. Model:'https://schema.org/streetAddress'
     */
    streetAddress?: string;
    /**
     * Property. The locality in which the street address is, and which is in the region. Model:'https://schema.org/addressLocality'
     */
    addressLocality?: string;
    /**
     * Property. The region in which the locality is, and which is in the country. Model:'https://schema.org/addressRegion'
     */
    addressRegion?: string;
    /**
     * Property. The country. For example, Spain. Model:'https://schema.org/addressCountry'
     */
    addressCountry?: string;
    /**
     * Property. The postal code. For example, 24004. Model:'https://schema.org/https://schema.org/postalCode'
     */
    postalCode?: string;
    /**
     * Property. The post office box number for PO box addresses. For example, 03578. Model:'https://schema.org/postOfficeBoxNumber'
     */
    postOfficeBoxNumber?: string;
    [k: string]: unknown;
  };
  /**
   * Property. The geographic area where a service or offered item is provided. Model:'https://schema.org/Text'
   */
  areaServed?: string;
  [k: string]: unknown;
} & {
  /**
   * Relationship. Reference to the entity, that documents the production of this entity
   */
  producedVia?: string;
  /**
   * Relationship. Reference to the entity, that documents the consumption of this entity
   */
  consumedVia?: string;
  [k: string]: unknown;
};

/**
 * Geoproperty. Geojson reference to the item. Point
 */
export interface GeoJSONPoint {
  type: "Point";
  coordinates: [number, number, ...number[]];
  bbox?: [number, number, number, number, ...number[]];
  [k: string]: unknown;
}
/**
 * Geoproperty. Geojson reference to the item. LineString
 */
export interface GeoJSONLineString {
  type: "LineString";
  coordinates: [[number, number, ...number[]], [number, number, ...number[]], ...[number, number, ...number[]][]];
  bbox?: [number, number, number, number, ...number[]];
  [k: string]: unknown;
}
/**
 * Geoproperty. Geojson reference to the item. Polygon
 */
export interface GeoJSONPolygon {
  type: "Polygon";
  coordinates: [
    [number, number, ...number[]],
    [number, number, ...number[]],
    [number, number, ...number[]],
    [number, number, ...number[]],
    ...[number, number, ...number[]][]
  ][];
  bbox?: [number, number, number, number, ...number[]];
  [k: string]: unknown;
}
/**
 * Geoproperty. Geojson reference to the item. MultiPoint
 */
export interface GeoJSONMultiPoint {
  type: "MultiPoint";
  coordinates: [number, number, ...number[]][];
  bbox?: [number, number, number, number, ...number[]];
  [k: string]: unknown;
}
/**
 * Geoproperty. Geojson reference to the item. MultiLineString
 */
export interface GeoJSONMultiLineString {
  type: "MultiLineString";
  coordinates: [[number, number, ...number[]], [number, number, ...number[]], ...[number, number, ...number[]][]][];
  bbox?: [number, number, number, number, ...number[]];
  [k: string]: unknown;
}
/**
 * Geoproperty. Geojson reference to the item. MultiLineString
 */
export interface GeoJSONMultiPolygon {
  type: "MultiPolygon";
  coordinates: [
    [number, number, ...number[]],
    [number, number, ...number[]],
    [number, number, ...number[]],
    [number, number, ...number[]],
    ...[number, number, ...number[]][]
  ][][];
  bbox?: [number, number, number, number, ...number[]];
  [k: string]: unknown;
}
