#!/bin/bash
#
#  Command Line Interface to start all services associated with the Getting-Started Tutorial
#
#  For this tutorial the commands are merely a convenience script to run docker-compose
#

set -e

if (( $# < 1 )); then
    echo "Illegal number of parameters"
    echo "usage: services [create|markdown|ngsi|jsonld|validate]"
    exit 1
fi

command="$1"
file="agriculture.yaml"
if (( $# == 2 )); then
    file="$2"
fi







case "${command}" in
	"help")
        echo "usage: services [create|markdown|ngsi|jsonld|validate]"
        ;;
	"create")
		export $(cat .env | grep "#" -v)
		export $(cat .env | grep "#" -v)
		 docker build -t contextgen ./context-file-generator   
		;;
	"markdown")
		echo "Creating Documentation for the Data Models"
		docker run --rm -v $(pwd)/:/files contextgen markdown -i "/files/${file}" > datamodels.md
		echo "datamodels.md created"
		;;
	"ngsi")
		echo "Creating a NGSI-LD @context file for normalized interactions"
		docker run --rm -v $(pwd)/:/files contextgen ngsi -i "/files/${file}" > datamodels.context-ngsi.jsonld
		echo "datamodels.context-ngsi.jsonld created"
		;;
	"jsonld")
		echo "Creating a JSON-LD @context file for key-values interactions"
		docker run --rm -v $(pwd)/:/files contextgen jsonld -i "/files/${file}" > datamodels.context.jsonld
		echo "datamodels.context.jsonld created"
		;;
	"validate")
		docker run --rm -v $(pwd)/:/files contextgen validate -i "/files/${file}"
		;;
	"start")
		export $(cat .env | grep "#" -v)
		./services ngsi
		;;
	"stop")
		export $(cat .env | grep "#" -v)
		echo "no services running."
		;;
	*)
		echo "Command not Found."
		echo "usage: services [create|markdown|ngsi|jsonld|validate]"
		exit 127;
		;;
esac
